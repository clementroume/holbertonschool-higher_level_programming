# testing matrix_divided function

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[-1, 2], [1, -2]], 3)
[[-0.33, 0.67], [0.33, -0.67]]

>>> matrix_divided("Hello", 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([1, [1, 2]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([["a", "b"], ["a", "b"]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[], [1, 2]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [1, 2]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2], [1, 2]], "a")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2], [1, 2]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2], [1, 2]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]

>>> matrix_divided([[1, 2], [1, float('inf')]], 2)
[[0.5, 1.0], [0.5, inf]]

>>> matrix_divided([[1, 2], [1, float('inf')]], float('inf'))
[[0.0, 0.0], [0.0, nan]]

>>> matrix_divided([[1, 2], [1, 2]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'